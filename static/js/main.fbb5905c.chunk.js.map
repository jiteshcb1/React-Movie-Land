{"version":3,"sources":["MovieCard.jsx","App.js","index.js","search.svg"],"names":["MovieCard","_ref","movie","react_default","a","createElement","className","Year","src","Poster","alt","Title","Type","App","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","searchTerm","setSearchTerm","searchMovies","asyncToGenerator","regenerator_default","mark","_callee","title","response","data","wrap","_context","prev","next","fetch","concat","sent","json","Search","stop","_x","apply","this","arguments","useEffect","placeholder","value","onChange","e","target","SearchIcon","onClick","length","map","src_MovieCard","ReactDOM","render","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"+MAmBeA,EAjBG,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAIH,EAAMK,OAEdJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKG,IAAsB,QAAjBN,EAAMO,OAAmBP,EAAMO,OAAS,kCAAmCC,IAAKR,EAAMS,SAEpGR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAOH,EAAMU,MACbT,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,UCuDZE,EAnDH,WAAM,IAAAC,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACEI,EADFJ,EAAA,GAAAK,EAEuBN,mBAAS,IAFhCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEME,EAFNF,EAAA,GAIRG,EAAY,eAAAxB,EAAAgB,OAAAS,EAAA,EAAAT,CAAAU,EAAAvB,EAAAwB,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAL,EAAAvB,EAAA6B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAK,GAAAC,OAfpB,yCAeoB,OAAAA,OAAiBR,IAD5B,cACXC,EADWG,EAAAK,KAAAL,EAAAE,KAAA,EAEEL,EAASS,OAFX,OAEXR,EAFWE,EAAAK,KAIjBnB,EAAUY,EAAKS,QAJE,wBAAAP,EAAAQ,SAAAb,MAAH,gBAAAc,GAAA,OAAA1C,EAAA2C,MAAAC,KAAAC,YAAA,GAYlB,OALAC,oBAAU,WACNtB,EAAa,aACd,IAICtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SACI2C,YAAY,oBACZC,MAAO1B,EACP2B,SAAU,SAACC,GAAD,OAAO3B,EAAc2B,EAAEC,OAAOH,UAG5C9C,EAAAC,EAAAC,cAAA,OACIG,IAAK6C,IACL3C,IAAI,SACJ4C,QAAS,kBAAM7B,EAAaF,OAIhCJ,EAAOoC,OAAS,EAERpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVa,EAAOqC,IAAI,SAACtD,GAAD,OACRC,EAAAC,EAAAC,cAACoD,EAAD,CAAWvD,MAAOA,OAI1BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,gCCvD5BqD,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe,4BCLjDC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.fbb5905c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n    return (\r\n        <div className='movie'>\r\n            <div>\r\n                <p>{movie.Year}</p>\r\n            </div>\r\n            <div>\r\n                <img src={movie.Poster !== 'N/A' ? movie.Poster : 'https://via.placeholder.com/400'} alt={movie.Title} />\r\n            </div>\r\n            <div>\r\n                <span>{movie.Type}</span>\r\n                <h3>{movie.Title}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport './App.css';\r\nimport SearchIcon from './search.svg'\r\nimport MovieCard from './MovieCard';\r\n\r\nconst API_URL = 'http://www.omdbapi.com?apikey=cbe52d6a';\r\n\r\n// const movie1 = {\r\n//     \"Title\": \"Superman & Lois\",\r\n//     \"Year\": \"2021\",\r\n//     \"imdbID\": \"tt11192306\",\r\n//     \"Type\": \"series\",\r\n//     \"Poster\": \"https://m.media-amazon.com/images/M/MV5BOGYyMmViMjgtZjViZi00NjkzLThjZGItMzZhYmZmOWZlMzdhXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_SX300.jpg\"\r\n// }\r\n\r\nconst App = () => {\r\n    const  [movies, setMovies] = useState([]);\r\n    const  [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const searchMovies = async (title) => {\r\n        const response = await fetch(`${API_URL}&s=${title}`);\r\n        const data = await response.json();\r\n\r\n        setMovies(data.Search);\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchMovies('superman');\r\n    }, []);\r\n//\r\n\r\n    return (\r\n        <div className='app'>\r\n            <h1>MovieLand</h1>\r\n\r\n            <div className='search'>\r\n                <input\r\n                    placeholder='Search for movies'\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n//\r\n                />\r\n                <img\r\n                    src={SearchIcon}\r\n                    alt=\"search\"\r\n                    onClick={() => searchMovies(searchTerm)}\r\n                />\r\n            </div>\r\n            {\r\n                movies.length > 0\r\n                    ?   (\r\n                        <div className='container'>\r\n                            {movies.map((movie) => (\r\n                                <MovieCard movie={movie} />\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className='empty'>\r\n                            <h2>No movies found</h2>\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n/*\r\nReact 18 introduces a new root API which provides better\r\nergonomics for managing roots. The new root API also \r\nenables the new concurrent renderer, which allows you \r\nto opt-into concurrent features.\r\n\r\n// Before\r\nimport { render } from 'react-dom';\r\nconst container = document.getElementById('app');\r\nrender(<App tab=\"home\" />, container);\r\n\r\n// After\r\nimport { createRoot } from 'react-dom/client';\r\nconst container = document.getElementById('app');\r\nconst root = createRoot(container); \r\n// createRoot(container!) if you use TypeScript\r\nroot.render(<App tab=\"home\" />);\r\n\r\nWeâ€™ve also changed unmountComponentAtNode to root.unmount:\r\n\r\n// Before\r\nunmountComponentAtNode(container);\r\n\r\n// After\r\nroot.unmount();\r\n*/","module.exports = __webpack_public_path__ + \"static/media/search.8ba3b3d5.svg\";"],"sourceRoot":""}